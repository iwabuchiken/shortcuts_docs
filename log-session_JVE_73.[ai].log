###2021年4月11日
srch:
	python program machine learning
	https://duckduckgo.com/?q=python+program+machine+learning&t=opera&ia=web&iai=r1-2&page=1&sexp=%7B"biaexp"%3A"b"%2C"msvrtexp"%3A"b"%2C"mliexp"%3A"b"%7D
	
::[16:47:05	
programming
	#C/P
		C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\68_theoretical-physics\1_start
		to	C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\73_ai
	modify codes
	test ==> OK
	
	> https://www.w3schools.com/python/python_ml_mean_median_mode.asp
	test ==> code
		C/P
		edit
		test ==> OK
	
	::]17:06:42
	
	>> https://www.w3schools.com/python/python_ml_standard_deviation.asp
		1) std
		C/P
		#edit
		test ==> OK : time=20210411_171234
	
		2) variance
		C/P
		edit
		test ==> OK
	
	>> https://www.w3schools.com/python/python_ml_percentile.asp
		1) percentile
		#1 Percentiles are used in statistics to 
		
		#C/P		#code:20210411_171845
		#edit
		test ==> OK

n:
	#n:20210411_172354
	C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\73_ai\1_start\1_1.py


###2021年4月12日14:40:42
	>> https://www.w3schools.com/python/python_ml_data_distribution.asp

	*#1
	*#2 Draw a histogram:
		seg] srch : pyplot save image
		https://www.codespeedy.com/saving-a-plot-as-an-image-in-python/
		
		*srch : python join os path

		*seg] search : python use pip command
	
	*#3 Big Data Distributions
		
n:
	https://www.w3schools.com/python/python_ml_normal_data_distribution.asp
	prog : #n:20210412_151638

###2021年4月13日13:35:41

*>> https://www.w3schools.com/python/python_ml_normal_data_distribution.asp
	prog : #n:20210412_151638

*>> https://www.w3schools.com/python/python_ml_scatterplot.asp
	
	::]14:03:06
	
*>>	https://www.w3schools.com/python/python_ml_linear_regression.asp

	::]14:28:43

n:
	https://www.w3schools.com/python/python_ml_polynomial_regression.asp
	
	#n:20210413_142903
		prog


###2021年4月14日14:29:02

*>> https://www.w3schools.com/python/python_ml_polynomial_regression.asp	::]15:55:31
		*#1 Start by drawing a scatter plot:
		*#2 Import numpy and matplotlib then 
			words
				numpy.polyfit
		*seg
			polyfit ==> 5
			#code:20210414_152625
		*seg
			"from sklearn.metrics import r2_score"
			==> yes?
				==> YES	::]15:32:49
		*#3 How well does my data fit in a polynomial regression?	::[15:33:27
		seg
			srch	scikit learn r2_score
		::]15:41:57
		*#4 Now we can use the information 	::[15:42:07
			"test_10_Predict"
			seg
				srch : matplotlib plot color
			*code
			test ==> 
				/seg
					srch : matplotlib api plot
				==> OK : plot_image_20210414_155224.png

n:
	https://www.w3schools.com/python/python_ml_multiple_regression.asp
	#n:20210414_160053

###2021年4月15日16:58:09

>> https://www.w3schools.com/python/python_ml_multiple_regression.asp
	#n:20210414_160053
	
	#1 Multiple regression is like 
		*coding
		*test ==> OK	::]17:33:23
	
	#2 Print the coefficient values 
		test ==> OK	::]17:38:07

n:
	https://www.w3schools.com/python/python_ml_scale.asp
	#n:20210415_174210

###2021年4月16日14:45:43
>> https://www.w3schools.com/python/python_ml_scale.asp
	#n:20210415_174210
	#1 Scale all values in the Weight 
		coding
		test ==> OK
		sheet : C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\73_ai\1_start\data_20210416\session-data.ods
	
	#2 
		"test_14_Scale_Predict"
		coding
	*seg : search
			sklearn linear_model predict()

n:
	https://www.w3schools.com/python/python_ml_train_test.asp
	#n:20210416_153541


###





@@@
###






###






###






###
taskkill /f /im javaw.exe
taskkill /f /im opera.exe


(a|b|c)([A-Z])	 $2
Tomoyuki Inui, Kazuichi Kitagawa, Tatsuya Takeguchi, Takashi Hagiwara, Yoshinori Makino

###
start C:\WORKS_2\shortcuts_docs\end_log_JVE_73.[ai].bat

set stringof_commit_message="(JVE_73.[theme=ai]) periodical updates"

C:\WORKS_2\a && pushd C:\WORKS_2\shortcuts_docs && g a . && g c -m %stringof_commit_message% && e && p && r f && g a . && g c -m %stringof_commit_message% && e && p && r oj && g a . && g c -m %stringof_commit_message% && e && p && taskkill /f /im sakura.exe && taskkill /f /im javaw.exe
