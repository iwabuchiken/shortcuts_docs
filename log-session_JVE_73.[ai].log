###2021年4月11日
srch:
	python program machine learning
	https://duckduckgo.com/?q=python+program+machine+learning&t=opera&ia=web&iai=r1-2&page=1&sexp=%7B"biaexp"%3A"b"%2C"msvrtexp"%3A"b"%2C"mliexp"%3A"b"%7D
	
::[16:47:05	
programming
	#C/P
		C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\68_theoretical-physics\1_start
		to	C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\73_ai
	modify codes
	test ==> OK
	
	> https://www.w3schools.com/python/python_ml_mean_median_mode.asp
	test ==> code
		C/P
		edit
		test ==> OK
	
	::]17:06:42
	
	>> https://www.w3schools.com/python/python_ml_standard_deviation.asp
		1) std
		C/P
		#edit
		test ==> OK : time=20210411_171234
	
		2) variance
		C/P
		edit
		test ==> OK
	
	>> https://www.w3schools.com/python/python_ml_percentile.asp
		1) percentile
		#1 Percentiles are used in statistics to 
		
		#C/P		#code:20210411_171845
		#edit
		test ==> OK

n:
	#n:20210411_172354
	C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\73_ai\1_start\1_1.py


###2021年4月12日14:40:42
	>> https://www.w3schools.com/python/python_ml_data_distribution.asp

	*#1
	*#2 Draw a histogram:
		seg] srch : pyplot save image
		https://www.codespeedy.com/saving-a-plot-as-an-image-in-python/
		
		*srch : python join os path

		*seg] search : python use pip command
	
	*#3 Big Data Distributions
		
n:
	https://www.w3schools.com/python/python_ml_normal_data_distribution.asp
	prog : #n:20210412_151638

###2021年4月13日13:35:41

*>> https://www.w3schools.com/python/python_ml_normal_data_distribution.asp
	prog : #n:20210412_151638

*>> https://www.w3schools.com/python/python_ml_scatterplot.asp
	
	::]14:03:06
	
*>>	https://www.w3schools.com/python/python_ml_linear_regression.asp

	::]14:28:43

n:
	https://www.w3schools.com/python/python_ml_polynomial_regression.asp
	
	#n:20210413_142903
		prog


###2021年4月14日14:29:02

*>> https://www.w3schools.com/python/python_ml_polynomial_regression.asp	::]15:55:31
		*#1 Start by drawing a scatter plot:
		*#2 Import numpy and matplotlib then 
			words
				numpy.polyfit
		*seg
			polyfit ==> 5
			#code:20210414_152625
		*seg
			"from sklearn.metrics import r2_score"
			==> yes?
				==> YES	::]15:32:49
		*#3 How well does my data fit in a polynomial regression?	::[15:33:27
		seg
			srch	scikit learn r2_score
		::]15:41:57
		*#4 Now we can use the information 	::[15:42:07
			"test_10_Predict"
			seg
				srch : matplotlib plot color
			*code
			test ==> 
				/seg
					srch : matplotlib api plot
				==> OK : plot_image_20210414_155224.png

n:
	https://www.w3schools.com/python/python_ml_multiple_regression.asp
	#n:20210414_160053

###2021年4月15日16:58:09

>> https://www.w3schools.com/python/python_ml_multiple_regression.asp
	#n:20210414_160053
	
	#1 Multiple regression is like 
		*coding
		*test ==> OK	::]17:33:23
	
	#2 Print the coefficient values 
		test ==> OK	::]17:38:07

n:
	https://www.w3schools.com/python/python_ml_scale.asp
	#n:20210415_174210

###2021年4月16日14:45:43
>> https://www.w3schools.com/python/python_ml_scale.asp
	#n:20210415_174210
	#1 Scale all values in the Weight 
		coding
		test ==> OK
		sheet : C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\73_ai\1_start\data_20210416\session-data.ods
	
	#2 
		"test_14_Scale_Predict"
		coding
	*seg : search
			sklearn linear_model predict()

n:
	https://www.w3schools.com/python/python_ml_train_test.asp
	#n:20210416_153541


###2021年4月17日14:09:58
s-7:

>> https://www.w3schools.com/python/python_ml_train_test.asp
	#n:20210416_153541
	
	*#1
	
		sheet : C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\73_ai\1_start\data_20210416\session-data.ods s-7.(1)
	
	*#2 The training set should be a random selection 
		
		search : matplotlib plot reset
	
	*#3 To make sure the testing set is not 
	
	*#4 What does the data set look like? 
		
		srch : numpy linespace
	
	*#5 Remember R2, also known 
	
	#6 Bring in the Testing Set

n:
	https://www.w3schools.com/python/python_ml_train_test.asp
	
		#6 Bring in the Testing Set
		
		#n:20210417_151327

###2021年4月18日12:41:45

	https://www.w3schools.com/python/python_ml_train_test.asp
	
		*#6 Bring in the Testing Set
		
			#n:20210417_151327

		*#7 Predict Values
		
			#:20210418_125209
		
			#.1 plot ==> predicted value, kadhalika
				srch : matplotlib plot font

n:
	https://www.w3schools.com/python/python_ml_decision_tree.asp
	#n:20210418_133238
	
	https://www.tutorialspoint.com/machine_learning_with_python/machine_learning_with_python_data_loading_for_ml_projects.htm

###2021年4月18日16:27:15
s-8:

	https://www.w3schools.com/python/python_ml_decision_tree.asp	:d-1
	#n:20210418_133238
		*#1 In this chapter we will 
			new file : shows.csv
		*#2 First, import the modules you 
			
			pydotplus
				python -m pip list
				search : python pydotplus
					https://3g2upl4pq6kufc4m.onion/?q=python+pydotplus&ia=web
				s: python pip search module
					https://3g2upl4pq6kufc4m.onion/?q=python+pip+search+module&ia=web
				console : python -m pip search pydotplus
					ERROR
					xmlrpc.client.Fault: <Fault -32500: "RuntimeError: PyPI's XMLRPC API i
s currently disabled due to unmanageable load and will be deprecated i
n the near future. See https://status.python.org/ for more information
.">
				console : python -m pip install pydotplus
					result : Successfully built pydotplus
Installing collected packages: pydotplus
Successfully installed pydotplus-2.0.2
			coding : skeleton : "import pydotplus"
			test ==> ok ::]16:47:35
			
			coding : DecisionTreeClassifier
			test ==> ok		::]16:51:28
			
			coding : read csv
				==> ok		::]16:54:17
			
		#3 To make a decision tree, all 
		#.1 Pandas has a map() method 
		
			coding :
				==> ok
		*#.2 Then we have to separate the feature 
			==> ok		::]17:02:07
		
		#4 Now we can create the actual 
			"step : 3"
				==> ok
			"export_graphviz"
				==> #debug:20210418_170812
					NameError: name 'tree' is not defined
					==> ok	::]17:09:18
				==> ok	::]17:09:45
			"graph_from_dot_data"
				==> ok	::]17:11:44
			
			"graph.write_png('mydecisiontree.png')"	##id:20210419_140659
				==> ERROR
					    'GraphViz\'s executables not found')
pydotplus.graphviz.InvocationException: GraphViz's executables not fou
nd
					search : pydotplus GraphViz's executables not found 
						https://stackoverflow.com/questions/27666846/pydot-invocationexception-graphvizs-executables-not-found
							On Windows 8 this solved the same
							
						https://datascience.stackexchange.com/questions/37428/graphviz-not-working-when-imported-inside-pydotplus-graphvizs-executables-not ==> this?
							Here's the advice from those three links:
							Download and install graphviz-2.38.msi 
							
					search : python pip graphviz
						https://pypi.org/project/graphviz/
					
					TRY : 
						cl : python -m pip install graphviz
						==> Installing collected packages: graphviz
Successfully installed graphviz-0.14.2
					
					~TRY : re-run py file	::[17:24:35
						==> N/C
					
					~TRY : "graphviz-2.38.msi "	::[17:28:52
						https://graphviz.org/download/
						https://graphviz.org/download/#windows
						https://gitlab.com/graphviz/graphviz/-/package_files/9574245/download
						
						download : exe file : stable_windows_10_cmake_Release_x64_graphviz-install-2.47.1-win64.exe
						C/P --> C:\WORKS_2\Programs\Python\Python_3.5.1\lib_additional
						
						add path	::]17:35:09
						
						==> N/C	::]17:36:44
					
					TRY : pydotplus --> other func for image export?
						search : pydotplus save image file
							https://3g2upl4pq6kufc4m.onion/?q=pydotplus+save+image+file&ia=web
							https://riptutorial.com/python/example/29348/pydotplus
							https://stackoverflow.com/questions/39825699/convert-decision-tree-directly-to-png
							
					
						"tree.export_XXX" ==> export dot file?
					
					TRY : image export --> other than actually first generating a png file?
					
					TRY : put executable file to --> ".../Lib"
						C:\WORKS_2\Programs\Python\Python_3.5.1
						
						##mark:20210418_180429
			
	https://www.tutorialspoint.com/machine_learning_with_python/machine_learning_with_python_data_loading_for_ml_projects.htm


n:
	##mark:20210418_180429
	#debug:20210418_170812

###2021年4月19日10:29:28
s-9:

	##mark:20210418_180429
	#debug:20210418_170812

	"graph.write_png('mydecisiontree.png')"
					==> ERROR
		~TRY : put executable file to --> ".../Lib"
			C:\WORKS_2\Programs\Python\Python_3.5.1
			from : C:\WORKS_2\Programs\Python\Python_3.5.1\lib_additional
			
			run file
				pushd C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\73_ai\1_start\
echo.>> log_session-1.log && echo ============================ >> log_session-1.log && python 1_1.py >> log_session-1.log
			==> N/C
			
		*TRY : see python load path	::[10:35:06
		
			search : python load path
			
			code : "print(sys.path)"
		
		~TRY : "C:\\WORKS_2\\Programs\\Python\\Python_3.5.1\\lib"
		C:\WORKS_2\Programs\Python\Python_3.5.1\lib
			==> put exe file in this dir
			
			code
			==> already copied	::]10:45:24
		
		*TRY : view code
				"C:\WORKS_2\Programs\Python\Python_3.5.1\lib\site-packages\pydotplus\graphviz.py", line 1960, in create
			found : "self.progs is None"
			*see : find_graphviz()
				==> #debug:20210419_104901
				found : "os.environ['PATH']" --> using this var for paths
							only if --> "if 'PATH' in os.environ"
						#debug:20210419_105456
					*?: 'PATH' in os.environ ? ==> YES	::]10:52:57
			see : __find_executables(path)
				#debug:20210419_105546
			
			solution candidate:	##id:20210419_110131
				in ".../Lib" dir, the exe file --> change name to one of:
			        'dot': '',
			        'twopi': '',
			        'neato': '',
			        'circo': '',
			        'fdp': '',
			        'sfdp': ''
					--> and, the extenstion ".exe"
						--> ref : #debug:20210419_110037
		
		*TRY : #id:20210419_110131
			::[11:02:04		::]11:22:40
			*change file name --> to : dot.exe
			run file
				==> N/C		::]11:03:33
		
			*FOLLOWUP: let's ouput on the console the func "find_graphviz()"'s inner working
				#debug:20210419_110522
				*code:
				*test ==> ERROR
					"SyntaxError: from __future__ imports must occur at the beginning of the file"
					line 34
					found: module import had been inserted
				*test ==> ERROR	::[11:09:38
				    "os.path.basename(os.path.basename(libs.thisfile()))
					NameError: name 'libs' is not defined"
					 line 487
					measure : import "libs"
						#debug:20210419_111157
				*test ==> ok : results shown	::]11:13:51
				
				*found : "C:\WORKS_2\Programs\Python\Python_3.5.1\lib" --> not in the output list
					--> seems : the program is looking at the windows PATH environ var
						--> ##mark:20210419_111844 (.../\1_start\log_session-1.log)

		*TRY :
				add to the windows environ var list --> "C:\WORKS_2\Programs\Python\Python_3.5.1\lib"
			::[11:22:34		::]11:43:33
			search : python add environ variable window
					python add windows path
			
			*code: add code to "...\pydotplus\graphviz.py"
				#debug:20210419_112847
			test:run file	::[11:30:22
				==> result chaged : "path : C:/WORKS_2/Programs/Python/Python_3.5.1/Lib/ ==> result : True"
							--> ##mark:20210419_113303 (.../\1_start\log_session-1.log)
				==> "OSError: [WinError 740] 要求された操作には管理者特権が必要です。"
					--> following the below:
					"File "C:\WORKS_2\Programs\Python\Python_3.5.1\lib\site-packages\pydotplus\graphviz.py", line 2023, in create
					    stderr=subprocess.PIPE, stdout=subprocess.PIPE)"
			>TRY :
					see the output from --> graphviz.py :line 2023
				#debug:20210419_113721 (graphviz.py)
				*code:
				test:run
					==> see log file --> comp.
				suggest : 	##id:20210419_114400
					maybe, need to see the file --> ...\Python\Python_3.5.1\lib\subprocess.py
					==> refer "  File "C:\WORKS_2\Programs\Python\Python_3.5.1\lib\subprocess.py", line 1220, in _execue_child    startupinfo)
							OSError: [WinError 740] 要求された操作には管理者特権が必要です。"
		
		*TRY : ->#id:20210419_114400
					::]12:02:11
			open : C:\WORKS_2\Programs\Python\Python_3.5.1\lib\subprocess.py
				--> line : 1220
			
			>TRY :
					see --> variables : "executable, args"
				*code : #debug:20210419_114738
					*1) import "libs"
						#debug:20210419_114909
					*2) debug code
				test:run
					==> "args = 'C:/WORKS_2/Programs/Python/Python_3.5.1/Lib/dot.exe -Tpng C:\Users\IWABUC~1\AppData\Local\Temp\tmp73gsl4hy'"
				
				found :
					1) data file (i.e. the above "...\tmp73gsl4hy") --> generated in the user's dir (d1)
					2) d1 --> to access this dir, admin status is required.
				at-the-moment-thinkable solutions :
					1) seemingly : the graphviz.py program generates dot data for the tree into the above in-users-dir directory(hypotheisis 1, h1)
					2) on h1 : change somehow the corresponding lines in graphviz.py --> generate dot data file into some non-admin-status-required dir.
				
				think :	##id:20210419_120233
					1) the possible funcs that generates dot data file are :
						1) tree.export_graphviz
						2) pydotplus.graph_from_dot_data
		
		TRY : ->##id:20210419_120233
				see code : tree.export_graphviz
			::[12:03:41
			sklearn.tree	==> where is the file?
				==> C:\WORKS_2\Programs\Python\Python_3.5.1\Lib\site-packages\sklearn\tree
					--> file : tree.py ? --> func "export_graphviz" --> exists? ==> NO
							--> export.py ? ==> YES!
			
			found :
				1) #debug:20210419_121525 (export.py // C:\WORKS_2\Programs\Python\Python_3.5.1\Lib\site-packages\sklearn\tree)
					--> "open(out_file, "w", encoding="utf-8")"
					and, this "out_file" is --> "export_graphviz(..., out_file=SENTINEL, ..."

		TRY : ->##id:20210419_120233
				see code : pydotplus.graph_from_dot_data
		
		*TRY : 
				in the console, "C:/WORKS_2/Programs/Python/Python_3.5.1/Lib/dot.exe -Tpng C:\Users\IWABUC~1\AppData\Local\Temp\tmp73gsl4hy"
			::[12:18:10		::]12:27:14
pushd C:\WORKS_2\Programs\Python\Python_3.5.1\Lib\
dot.exe -Tpng "C:\Users\IWABUC~1\AppData\Local\Temp\tmp73gsl4hy"
			result:
				1) "Graphviz" --> installation window started
				2) install to --> C:\WORKS_2\Programs\Graphviz\
					==> comp	::]2021年4月19日
				3) console --> cursor returned
				4) in Temp dir --> no png file (C:\Users\iwabuchiken\AppData\Local\Temp)
			
			>TRY :	::[12:23:56
					again, the cmd line : ""
				1) again, "Graphviz" --> installation window started
			>TRY :		::]12:25:51
					see --> C:\WORKS_2\Programs\Graphviz\
				1) in the dir "C:\WORKS_2\Programs\Graphviz\bin" --> "dot.exe"
		
		TRY :	##id:20210419_123012
				"dot.exe" --> use the one in "C:\WORKS_2\Programs\Graphviz\bin"
				#debug:20210419_112847 (graphviz.py)
				::[12:28:56

n:
	->##id:20210419_123012



###2021年4月19日13:49:26
s-10:

>>1
	TRY ] ->##id:20210419_123012
	"dot.exe" --> use the one in "C:\WORKS_2\Programs\Graphviz\bin"
				#debug:20210419_112847 (graphviz.py)
		code:
			1) change --> var value
			2) comment in --> #debug:20210419_110522
		test:run	::[13:53:01
			==> png created!!!!		::]13:55:34
	
		found :
				how to fix
			1) download installation file from : https://gitlab.com/graphviz/graphviz/-/package_files/9574245/download
			2) open the file --> installation window opens
			3) install to the dir of your choice
			4) in the generated directory set, there also comes the dir "bin"
			5) in this dir, the executable file "dot.exe" is listed
			6) in graphviz.py file, add an import line
				--> "os.environ["PATH"] += os.pathsep + 'your-directory-of-choice/Graphviz/bin'"
			==> complete.
	
	*work:		::]14:16:19
			comment out --> those lines used in the debugging
		*1) subprocess.py
		*2) graphviz.py (C:\WORKS_2\Programs\Python\Python_3.5.1\lib\site-packages\pydotplus)
	
	%TRY :
			what is "SENTINEL" (export.py : #debug:20210419_135422) 

>>2		::[14:07:24

		resume from : ->##id:20210419_140659
	https://www.w3schools.com/python/python_ml_decision_tree.asp
	
		#4 Now we can create the actual
			"graph.write_png('mydecisiontree.png')"
				==> ok		::]14:11:13
			up to " plt.show() "
				==> ok		::]14:23:17
		
		#5 Result Explained
			use sheet --> C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\73_ai\1_start\data\s-10\sheet.ods
			::]14:42:57
			
		*#6 Comedians Continue:
		
		~#7 Comedians Continue:
			code:
			test:run	::[15:30:21
				==> PROBLEM
					--> result is "[0]"
				==> DROP: let's move on. maybe other sites using this decision tree thing.
			::]15:36:20
		
>>3		::[15:36:41
		
		search : other ML tutorial sites
		*https://duckduckgo.com/?q=python+program+machine+learning&t=opera&ia=web&iai=r1-2&page=1&sexp=%7B"biaexp"%3A"b"%2C"msvrtexp"%3A"b"%2C"mliexp"%3A"b"%7D	<== s-1.1
		
		search : qiita python machine learning

>>4		::[15:50:43
		
		s-10.d-1 / Introduction To Machine Learning using Python
		* https://www.geeksforgeeks.org/introduction-machine-learning-using-python/		::]2021年4月21日17:23:40
		
			*#1 Machine learning is a type of 
			#2 Machine learning involves a computer 
			#3 Here is a python script 	##id:20210419_161132
			#4 Note that this program might 	::[2021年4月21日16:21:33
				code:	(s-11_ml.py)
					--> log_s-11_ml.log
					*> setup
				*test 
					==> ok		::]16:34:11
					
				code:	import load_iris (s-11_ml.py)
				*test
					==> ok		::]16:37:48
				
				*code : other imports
					==> ok		::]16:39:35
				
				code : "load_iris"
					--> #mark:20210421_164025
					==> ok		::]16:43:31
				*seg : view --> "DESCR"
					==> ok
				*code : "train_test_split"
					==> ok
				*code : "KNeighborsClassifier"
					==> ok		::]16:51:31
				*code : "fit"
					==> ok
				*code : "array"
					==> ok
				code : "predict"
					==> ok
				*code : display
					==> ok		::]17:03:01
			
			*#5 Explanation of the program:	::[17:03:18
			*#6 Thus, we saw how machine 	::[17:18:47
			

n:
	->##id:20210419_161132

###2021年4月21日16:17:26
s-11:

>>1

	->##id:20210419_161132

>>2
	view
	https://www.geeksforgeeks.org/learning-model-building-scikit-learn-python-machine-learning-library/
	
	#1 Important features of 	::[17:23:06	##id:20210421_172316
	
	#2 Installation:	::[2021年4月22日16:03:39
	#3 Step 1: Load a dataset
		code :  (C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\73_ai\1_start\s_11_ml.py .../\log_s-11_ml.log)
			test_S_12_Scikit	#mark:20210422_162029
			*load_iris
			*type(X)
	
	~#4 Loading external dataset: 	::[16:42:28
		code : 
			*import pands	#mark:20210422_164640
			data.shape
			
	*#5 Consider the example below:
	#6 Step 3: Training the model	::[17:01:54
		code : #mark:20210422_170418
			*accuracy_score	#mark:20210422_171840
			*"step : 5 : 2"
			joblib.dump		#mark:20210422_172852
				import module
	#7 In case you want to load 	::[17:58:23
		##id:20210422_175911
	
	
	
n:
	##id:20210421_172316
	
	py file ==> use this session's file

###2021年4月22日16:01:03
s-12:

>>1
		##id:20210421_172316
	*>> valid : 
		python -m pip list
	
	>> seg
		*srch : python count time
		*srch : python convert float to time string
			https://3g2upl4pq6kufc4m.onion/?q=python+convert+float+to+time+string&ia=web
		*srch : python float to string
		~srch : geeksforgeeks.org weather.csv	::[16:52:28
		
n:
	https://www.geeksforgeeks.org/learning-model-building-scikit-learn-python-machine-learning-library/
		
		##id:20210422_175911


###




@@@
###





###





###
taskkill /f /im javaw.exe
taskkill /f /im opera.exe


(a|b|c)([A-Z])	 $2
Tomoyuki Inui, Kazuichi Kitagawa, Tatsuya Takeguchi, Takashi Hagiwara, Yoshinori Makino

###
start C:\WORKS_2\shortcuts_docs\end_log_JVE_73.[ai].git.bat

start C:\WORKS_2\shortcuts_docs\end_log_JVE_73.[ai].bat

set stringof_commit_message="(JVE_73.[theme=ai]) periodical updates"

C:\WORKS_2\a && pushd C:\WORKS_2\shortcuts_docs && g a . && g c -m %stringof_commit_message% && e && p && r f && g a . && g c -m %stringof_commit_message% && e && p && r oj && g a . && g c -m %stringof_commit_message% && e && p && taskkill /f /im sakura.exe && taskkill /f /im javaw.exe
