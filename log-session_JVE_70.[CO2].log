###2021年3月14日15:51:30

	https://ja.wikipedia.org/wiki/捕捉剤	:d-1
	
	https://en.wikipedia.org/wiki/Scavenger_(chemistry)	:d-2
	
	oxidant meaning
		https://3g2upl4pq6kufc4m.onion/?q=oxidant+meaning&ia=web
	
	oxigen removal
		https://3g2upl4pq6kufc4m.onion/?q=oxigen+removal&ia=web
	
	

###2021年3月16日14:28:49

	1. https://en.wikipedia.org/wiki/Oxygen_scavenger	:d-1
	
		#6
			Ascorbic acid
	
		ferrous carbonate

		metal halide catalyst
		
		https://en.wikipedia.org/wiki/Iron%28II%29_carbonate#Properties	:d-2
		
		https://en.wikipedia.org/wiki/Vitamin_C	:d-3
		
		https://en.wikipedia.org/wiki/Sodium_bicarbonate	:d-4
		
		https://en.wikipedia.org/wiki/Bicarbonate	:d-5
		
		https://en.wikipedia.org/wiki/Carbonic_acid	:d-6
	
	2. surface-wave microwave (https://www.sciencedirect.com/science/article/abs/pii/S092633731630176X :s-2.d-1)
	
		https://3g2upl4pq6kufc4m.onion/?q=surface-wave+microwave&ia=web
		
		マイクロ波
		https://ja.wikipedia.org/wiki/マイクロ波	:d-7
			0.2 	111 （GHz）
		
			https://ja.wikipedia.org/wiki/赤外線
				全ての分子には、ある決まった周波数の電磁波を吸収する性質がある。
			
			波長 周期 変換
			
			可視光線
			https://towatowa.net/hertz/#i-2	:d-7.1
	

###2021年3月17日14:40:15


###2021年3月17日16:21:35
ニッケル
	https://ja.wikipedia.org/wiki/ニッケル

###2021年3月21日12:56:47

lanthanum

###2021年3月25日17:35:01
FTS chemistry


###2021年3月27日16:49:40
hydroformylation


###2021年3月28日17:44:24


###2021年3月30日11:37:19
インジウム
	https://ja.wikipedia.org/wiki/インジウム	:d-1
		融点は156.4 °C

ジメチルエーテル
	https://ja.wikipedia.org/wiki/ジメチルエーテル	:d-2
		結合強度が弱い


###2021年4月12日15:46:07

*>> search : Kohlendioxid Hydrierung
*>> search : Гидрирование углекислого газа


###2021年4月28日16:27:47
>>
	search :
		TPOT open-source
	
	read	::[16:54:16
	
		Selective Alkene Production by the Hydrogenation 

	 of Carbon Dioxide over Fe-Cu Catalyst <https://core.ac.uk/download/pdf/82012210.pdf>

###2021年5月2日14:25:52

>>1
	sheet : sheets.[s-60~].ods / tab : 1

###2021年5月10日17:16:11
s-68

>>1 programming

	*eclipse : jve_70-CO2_68_trans-string
	*new file : 
		*process-trans-sentences.php
		*log_process-trans-sentences.log
	*edit
		
	code:
		"test_1();" --> skeleton
		TEST		::[17:29:26
			==> OK		::]17:38:34
	code:
		$fpath_Trans_Dat
		TEST
			==> OK
	code:
		join loaded lines
			==> OK
	code:
		each line --> trim return char
		search : php trim white char
			==> OK		::]17:56:31
	code:
		joined lines --> split by " "
			==> OK
		
n:
	#n:20210510_175850
	process-trans-sentences.php (C:\WORKS_2\WS\Eclipse_Luna\Cake_IFM11\app\Lib\others\jve_70-CO2_68_trans-string\)
	tasks:
		split tokens --> filter
		filtered tokens --> build into a line
		the line --> write into a file
		the file --> open
		COMP.

###2021年5月11日10:41:28
s-69

>>1. programming

	code:
		filtering
		*search : php replace regex
		TEST		::[10:55:35
			==> OK
	code:
		pattern --> /^[,'-0-9a-zA-Z\(\),\.а-я]+(\r\n|$)/	(add ",")
		==> not as intended
	code
		pattern --> /^[,'-0-9a-zA-Z\(\),\.а-я]*(\r\n|$)/	(replace "+" with "*")
		==> n.a.i.	::]11:02:09
	*code:
		add dummy strings : "abc def"
		==> match
	*code:		::[11:03:41
		add dummy strings : "abc def gh'i"
		==> match	::]11:04:19
	code:		::[11:03:41
		add dummy strings : "abc def gh'i ааа"	(a kyril chars)
		==> match
	code:		::[11:06:15
		add dummy strings : "аадаа"	(kyril-specific chars)
		==> match
	code:		::[11:08:10
		add dummy strings : "вод"	(a part of an unmatched string)
		==> m.
	*code:		::[11:08:41
		add dummy strings : "водород"	(a part of an unmatched string, "," char not included)
		==> not match
	code:		::[11:10:13
		add dummy strings : "водо"	(a part of an unmatched string, "р" char nie zawarty)
		==> m.
	code:		::[11:12:42
		add dummy strings : "рр"	(a string of suspect chars)
		==> nie pasuje.
	*TRY:
		pattern --> add range "А-Я" (capital chars)
		==> no change
	TRY:		::[11:16:48
		pattern --> add char "р" (specific char)
		==> pasuje.
	*TRY:		::[11:18:30
		source --> remove "'" char
		==> brak zmiany (wydaje się)
	*TRY:		::[11:20:14
		dummy --> "окс" (część niedopasowanego ciągu.)
		==> nie pasuje (n.p.)
	search : php regex russian characters
		https://stackoverflow.com/questions/1571187/regexp-with-russian-lang
	
	*TRY:		::[11:25:07
		pattern --> "\x{0410}-\x{042F}"
		==> cyrillic strings --> all not matched.
	TRY:		::[11:28:31
		pattern --> "\x{0410}-\x{042F}" (cyrillic only)
		==> cyrillic nie pasuje. non-cyrillic also.
	TRY:		::[11:32:51
		pattern --> "а-яА-Я\p{Cyrillic}0-9"
		==> same as : pattern-id:20210511_113516
	TRY:		::[11:35:33
		pattern --> "^[а-яА-Я\p{Cyrillic}0-9\s\-]*$"	(no return chars)
		==> brak zmiany.
	TRY:		::[11:37:35
		pattern --> "йцукенгшщзхъфывапролджэячсмитьбю"	(list up)
		==> partially. "синтез-газ," --> nie pasuje.
	*TRY:		::[11:39:29
		source --> replace : "синтез-газ," --> "синтез-газ"	("," removed)
		==> pasuje.
	TRY:		::[11:41:08
		pattern --> add ","
		==> pasuje.
	*code:
		pattern --> add non-cyrillic chars
		"0-9a-zA-Z"
		==> OK
	*code:		::[11:48:04
		pattern --> add non-cyrillic chars
		"'"
		==> OK
	code:		::[11:49:44
		pattern --> add directive "i"
		source --> add capital cyrillic chars
		first, without "i"
		==> OK
		with "i"
		==> nie pasuje.
	*TRY:		::[11:53:20
		pattern --> add capital chars
		"ЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ"
		==> pasuje.
	*code:
		not-matched tokens --> to an array
		==> OK		::]12:04:26
	code:
		final string --> to a file
		*coding
		==> OK		::]12:11:10
	*code:
		open the written file
		search : php run external file
		*coding
		==> OK		::]12:18:21
	admin:
		debug outputs --> comment out
		==> ok		::]12:25:21

n:
	german text
	spanish text
	#n:20210511_122722

>>session-2

	code:
		debug lines --> comment in
		source --> add german words
			--> add : german words with no trans string(dummy)
		run
			==> ok		::]13:56:21
	test:
		source --> no-trans-string umlaut-containing german texts
			--> "Zeitö"
		==> "NOT match" --> OK		::]13:57:55
	code:
		pattern --> add umlauts
		*coding : pattern-id:20210511_140010
			--> "äüöß"
		==> "match" --> ok		::]14:01:55
	
	code:
		spanish chars --> "ÁÉÍÓÚÜñáéíóúü"
		source --> spanish chars
		coding : first, w/o setting
			--> "canción gustó"
		==> pasuje.
		tesing: "ñ" --> "español pequeña ciudad"
		==> ok : pasuje.
		tesing: "ñ" --> "español pequeña[little ciudad"
		==> ok : pasuje.	::]14:09:44
	
	coding --> COMP.

>>3.
	project start --> batch file, addition --> "log-session_JVE_70.[CO2].[trans-sentences].dat"
		==> ok		::]14:13:15

>>4. coding
	code:
		*comment out
			294 274 266 241 225 161 117
		==> ok		::]14:20:58
	admin: git	::[14:22:16

n:
	COMP.
	if any trouble happens(it will), then work on it.

>>4-1.
	PROBLEM		::[14:52:41
		==> korean chars --> not filtered
		search : php regex korean characters

>>5. read

###2021年5月13日11:57:59
s-70:

>>1. 

		==> korean chars --> not filtered
		search : php regex korean characters

###2021年5月17日13:57:07

>>1. programming

	1. eclipse : mylyn : 70#_CO2_process-texts-for-reading/74~
	
	2. new file
		#1. copy : C:\WORKS_2\WS\Eclipse_Luna\Cake_IFM11\app\Lib\others\jve_70-CO2_68_trans-string\process-trans-sentences.php
			==> process-texts-for-reading_korean.php
		
		#2. replace file name strings
		#3. new log file
			1. log_process-texts-for-reading_korean.log
				--> copy : log_process-trans-sentences.log
			#2. file content --> delete
		
		#4. test
			1. coding
			==> OK
	3. plan (PXX)
		#1. open source file (f1)
		#2. load file contents (s1)
		#3. s1 --> apply regex (s1')
		#4. s1' --> to a new file (f2)	::]2021年5月18日12:29:13
		5. f2 --> open (add 2021年5月18日12:29:05)
	4. code : P1 --> build_Texts_For_Reading()
		#1. skeleton
			==> OK
		#2. file path --> build
			#code:20210517_142450
			==> OK
	5. code : P2
		1. load
			#code:20210517_142744
			==> OK
	6. code : P3 : s1 --> apply regex (s1')
		1. check
				each element --> ends with "\r\n"?
			search : php regex match
			skeleton
			==> OK
		#2. paragraph-end return ("\.\r\n")
				--> add new line
			#1. match? --> "\.\r\n" 
				#code:20210517_144312
				#coding
				==> OK
			#2. match --> replace
				#code:20210517_145120
				==> OK
		#3. non-sentence-end return --> remove
				([^\.])\r\n	$1 
			#coding
			==> OK		::]15:04:25
			#PROB : processed elems --> "\." remains. needs it to be "." (no '\' char)
				#prob:20210517_150538
				TRY : 
					==> OK		::]15:07:16
		#4. join array elems --> "" (no separator)
			==> OK
	7. code : P4 : s1' --> to a new file (f2)
		1. code
			#code:20210517_151155
			C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\70_co2\texts-for-reading
			#coding
			==> OK		::]15:27:33
	8. code : P3 : sentence-end period --> add : double return
		#code:20210517_151904
		##mark:20210518_121643
		::[2021年5月18日12:17:19
		1. run program (at the start of the session)
			==> OK		::]12:21:03
		#2. coding
		test	::[12:27:01
			==> OK!!!		::]12:28:41
	9. code : P5 : f2 --> open
		#code:20210518_123133
		#1. coding
		test
			==> OK!!!		::]12:35:06
	10. test
		1. new web page
			https://www.cheric.org/PDF/PIC/PC15/PC15-2-0011.pdf
			==> OK!		::]12:50:31
	COMP.	::]2021年5月18日12:50:41

n:
	#code:20210517_151904

###2021年5月18日12:13:03

>>1. programming

	1. eclipse : mylyn : 70#_CO2_process-texts-for-reading/74~
	
	-->##mark:20210518_121643
	
	COMP.	::]12:35:22


###2021年5月19日12:00:17

>>1. programming
	==> chinese text
	target page : r-21-4~2 / CO2捕集、固定与利用（CCUS）技术之研发全景瞭望 <https://huanbao.bjx.com.cn/news/20201211/1121642.shtml>

	1. eclipse : mylyn : 70#_CO2_process-texts-for-reading/74~
	
	2. steps
		#1. empty line --> add return (d1)
		#2. paragraph-end return --> d1
			/。\r\n/	/。\r\r/
		#3. in-paragraph-period --> d1
		4. space char --> remove
	
	#3. prep 
		#1. file --> c/p
			#1. *
				to : process-texts-for-reading_chinese.php
			#2. log_process-texts-for-reading_korean.log
				--> log_process-texts-for-reading_chinese.log
		#2. new file --> modify file names
		#test : test_1()		::[12:13:01
			==> OK		::]12:13:24
	4. edit
			regex section
			#code:20210519_121539
		1. upto : "file : open"
			==> OK
		2. P1 : "empty line --> add return (d1)"
			#coding : #debug:20210519_131707
			==> OK
		3. match/no-match --> to a new array
			coding : #code:20210519_132507
			==> OK		::]13:26:31
		4. write to a file
			#coding : #code:20210519_132812
			==> 
	5. coding
			==> P3 : in-paragraph-period --> d1
		1. coding : #code:20210519_133509
			#==> PROB : paragraph-end period --> also detectd
				TRY : /(.。)([^\r])/
					==> OK (actually, no problem in the original)
			==> PROB : in one paragraph, two periods --> the latter note detected
				TRY : "php preg match all"
					==> OK		::]
		2. coding : #code:20210519_133509
				==> replace
			#search : php preg replace all
			==> PROB : a two-period-including paragraph --> not replaced
				FOUND : #fix:20210519_140624
				==> OK		::]14:07:42
	6. coding
			P2 : paragraph-end return --> d1
		1. #coding : #code:20210519_141219
			==> OK		::]14:22:39
	7. coding
			P4 : space char --> remove
		1. #coding : #code:20210519_143620
			==> OK		::]14:41:24

	n:
		COMP.

>>2. programming
	==> chinese text, pinyin
	
	1. prep
		#1. copy : \process-trans-sentences.php
			==> process-trans-sentences_chinese.php
			log_process-trans-sentences.log
			==> log_process-trans-sentences_chinese.log
		2. file names --> change
	2. coding
		1. upto : get tokens : #code:20210519_153650
			==> OK		::]15:38:00
		2. filtering : #code:20210519_153650
			search : regex chinese characters
			"\p{Han}"
			==> NO
		3. use : /.+\[.+/
			==> OK		::]15:45:20
	#3. write to --> file
		1. coding
			==> OK		::]15:49:21
	
	4. final setup --> batch file
		start-trans-process_chinese.bat
		
		test
			#: batch file open
			==> OK		::]15:51:38
			#: command line
			==> OK		::]15:53:20

###




@@@
###





###





###





###
taskkill /f /im javaw.exe
taskkill /f /im opera.exe


(a|b|c)([A-Z])	 $2
Tomoyuki Inui, Kazuichi Kitagawa, Tatsuya Takeguchi, Takashi Hagiwara, Yoshinori Makino


2021年3月25日17:05:11
81.6.40.182

#.7 Zum besseren Verständnis der Phasen- und Dichtezustände des CO2-H2-Systems und den zusätzlichen

using scaling relations machine learning and DFT calculations

###2021年4月19日16:39:53
>>steps
		german texts
	1. sakura
		1. C - a / -v [C/P --> to sakura file]
		2. C - r / M - ↓ [choose "\r\n"] / M - a / Esc x 2 [close window]
		3. C -a / - c / Tab [move to browser]
	2. browser
		1. C - a/ - v / - Home [paste to trans site, move to the top of the text]
	
###2021年5月1日13:52:17

regex ---> for german texts (reg:german)
# 1) non-sentence-end return --> remove
([^\.])\r\n	$1 

2) add : return chars	(added:2021年5月17日11:23:46)
\.$	.\r\n\r\n

#=> deprecated(2021年5月6日14:47:44) : \r\n	 

# 2) in-paragraph sentence-end --> add a new return
([a-z])\. 	$1.\r\n\r\n

###2021年5月9日11:09:59
regex ---> for german texts : (trans)

1) space char --> to return char
 	\r\n
 	
2) "["-char-not-containg lines --> delete
^#*[-0-9a-zA-Z\(\),\.]*[äüöß]*:*[-0-9a-zA-Z\(\),\.]*\r\n	
	--> "#" char at the head ~~> potrzebny
#^#*[-0-9a-zA-Z\(\),\.]+[äüöß]*:*[-0-9a-zA-Z\(\),\.]*\r\n	
#^[-0-9a-zA-Z\(\),\.]+[äüöß]*[-0-9a-zA-Z\(\),\.]*\r\n
#^[-0-9a-zA-Z\(\),\.]+[äüöß]*:*[-0-9a-zA-Z\(\),\.]*\r\n
#^[a-zA-Z\(\),\.]+[äöß]*[a-zA-Z\(\),\.]+\r\n	
#^[-0-9a-zA-Z\(\),\.]+[äüöß]*[-0-9a-zA-Z\(\),\.]+\r\n
#^[:\#-0-9a-zA-Z\(\),\.]*[äüöß]*[:\#-0-9a-zA-Z\(\),\.]*\r\n	

^[:\(\)0-9-a-z]+\r\n	#=> works	2021年5月9日14:17:29



3) return char --> to "," (last step)
\r\n	,

	==> comp

[öa-zA-Z]+? ([öa-zA-Z]+?\[.*?)	\r\n$1	#=> "ö"-included words not detected
ö	#=> detected
[öa-zA-Z]+?	#=> not detected
	search : regular expression german letters
		https://stackoverflow.com/questions/36366125/include-special-characters-like-ö-ä-ü-in-regular-expressions
[a-zA-Zö]+?	#=> n.d.
#ref https://stackoverflow.com/questions/22017723/regex-for-umlaut
[\u00C0-\u017Fa-zA-Z]+?	#=> n.d.
 (.+?)(ö|ä)(.+?)\[(.+?) 

	search : regular expression not include character

TRY: / .+\[.+ /	#=> select a long range
TRY: / .+?\[.+? /
	==> "Größen[수량" --> preceding words selected
TRY: / .+?ö+? /
	==> not detected
TRY: / .+?[ö]+? /
	==> not detected
TRY: / .+?[öß]+? /
	==> not detected
TRY: / / --> \t	(space --> return)
	==> OK
TRY: /^.+?[^\[].+$/ --> \t	("["-not-containing lines --> delete)
	==> no : all lines selected
TRY: /^.+?[\[].+$/ ("["-containing lines)
	==> OK
TRY: /^[a-zA-Z\(\),\.]*$/ ("["-not-containing lines)
	==> PROB : "ä"-containing line --> n.d.
TRY: /^[a-zA-Z\(\),\.ä]*$/ ("["-not-containing lines)
	==> n/c
search : sakura regular expression

TRY: /[a-z]+ä.+/	(openoffice)	::[11:48:25
	==> detected : "Selektivität)."
TRY: /öß/	(openoffice)	::[11:49:01
	==> detected
TRY: /ö.+/	(openoffice)	::[11:49:31
	==> detected : "ößen[수량"
TRY: /[öa-z]+/	(openoffice)	::[11:50:34
	==> detected
TRY: /[a-z]+[ö]+.+/	(openoffice)	::[11:51:31
	==> detected : "Größen[수량"
TRY: /.+[\[]+.+/	(openoffice)	::[11:54:34
	==> detected
TRY: /.+[^\[]+.+/	(openoffice)	::[11:55:33
	==> detect all
TRY: /^[a-zA-Z\(\),\.]+[ä]*[a-zA-Z\(\),\.]+\r\n/	(openoffice)	::[11:56:38
TRY: /^[a-zA-Z\(\),\.]+[ä]*[a-zA-Z\(\),\.]+\r\n/	(sakura)
	==> detected!!
TRY: /^[a-zA-Z\(\),\.]+[äöß]*[a-zA-Z\(\),\.]+\r\n/	(sakura)	::[12:03:07
	==> detected!!		==> THIS
	
regex ---> for general texts

# 1) remove : non-period return
([^\.])$\r\n	$1 

# 2) add : return chars
\.$	.\r\n\r\n
#$\r\n	\r\n\r\n

# 3) add : in-sentence period --> return chars
\. 	.\r\n\r\n

[2] steps : key operations
1) sakura
	C - Home > -r [open dialog]
	M - ↓ > ↑↓:"([^\.])$\r\n" > Tab [choose regex, move to the box below
	M - ↓ > ↑↓:"$1 " > M - a [choose the replacements, replace]
	Esc [close : message dialog]
	S - Tab [go back to the upper box
	M - ↓ > ↑↓:"\.$" > Tab [choose regex, move to the box below
	M - ↓ > ↑↓:".\r\n\r\n" > M - a [choose the replacements, replace]
	S - Tab [go back to the upper box
	M - ↓ > ↑↓:"\. " > M - a [choose regex, replace	Esc x 2 [close dialogues


regex backward
http://www.rexegg.com/regex-disambiguation.html#lookarounds

regex : reduce double empty lines into one
\r\n	@@@@
@+	\r\n\r\n

###2021年5月9日15:55:18
regex ---> for russian texts : (with trans)

#trans : korean, english
start C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\70_co2\start-trans-process.bat

#trans : chinese
start C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\70_co2\start-trans-process_chinese.bat
	
	steps
	1. console
		1. run batch file
	2. gen-ed file
		1. C - a > - c [copy
		2. M - Space - c [close file
		3. Tab x N [move to the "...[CO2].dat" file
	3. [CO2].dat file
		1. type-in --> "trans"
		2. paste
		

sakura C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\70_co2\start-trans-process.bat


#texts
1) empty line --> add return
^$\r\n	\r\n\r\n

2) period-ending line --> add return
\.\r\n	\.\r\n\r\n

3) in-sentence period --> add return chars
\. 	.\r\n\r\n

###trans(via program)
pushd C:\WORKS_2\WS\Eclipse_Luna\Cake_IFM11\app\Lib\others\jve_70-CO2_68_trans-string\
echo =============================== >> log_process-trans-sentences.log && php process-trans-sentences.php >> log_process-trans-sentences.log && echo. >> log_process-trans-sentences.log

sakura C:\WORKS_2\WS\Eclipse_Luna\Cake_IFM11\app\Lib\others\jve_70-CO2_68_trans-string\process-trans-sentences.php


1) space char --> to return char
 	\r\n
 	
2) "["-char-not-containg lines --> delete

^['-0-9a-zA-Z\(\),\.а-я]+(\r\n|$)

#^['-0-9a-zA-Z\(\),\.а-я]+\r\n	


#^[-0-9a-zA-Z\(\),\.а-я']+\r\n	#=> not working
#^['-0-9a-zA-Z\(\),\.а-я]+\r\n	#=> working

3) return char --> to ","
\r\n	,


#[-0-9a-zA-Z\(\),\.а]+
	==> OK		2021年5月9日15:57:36
#[-0-9a-zA-Z\(\),\.а-х]+
	==> OK		2021年5月9日15:58:38
#^[-0-9a-zA-Z\(\),\.а-х]+\r\n
	==> "каталитических" ~~> n.d.		2021年5月9日16:00:53
#^[-0-9a-zA-Z\(\),\.а-я]+\r\n
	==> OK		2021年5月9日16:01:41


#^#*[-0-9a-zA-Z\(\),\.]+[äüöß]*:*[-0-9a-zA-Z\(\),\.]*\r\n	
	--> "#" char at the head ~~> potrzebny

^[:\(\)0-9-a-z]+\r\n	#=> works	2021年5月9日14:17:29


###2021年5月17日13:12:34
text-processing(trans) ---------> russian trans

1) each token
,	\r\n

2) split
\[	\t

3) C/P
	to : trans.ods (C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\70_co2\trans.ods)

4) trans.ods
	1. numbering
		1. row number-based
		2. id

5) sort


###2021年5月6日10:22:48

regex ---> for chinese texts

1) remove : non-sentence-end return chars
([^。,])$\r\n	$1

2) remove : space char
 	
####2021年5月7日15:56:19
regex ---> for spanish texts (with trans)

#DEPRECATED 1) trans-word-carrying-orig-words(m1) --> to a new line
[a-zA-Z]+? ([a-zA-Z]+?\[[a-zA-Z\-]*)	\r\n$1
[a-zA-Z]+? ([a-zA-Z]+?\[.*?)	\r\n$1

#DEPRECATED 2) delete "["-less lines
^.*[^\[].*\r\n

3) remove chars between two m1's
([úa-zA-Z\-]*\[[a-zA-Z\-]*)	\r\n$1\r\n

[úa-zA-Z\-]*\[	==> detected
[úa-zA-Z\-]*\[[a-zA-Z\-]*	==> YES
([úa-zA-Z\-]*\[[a-zA-Z\-]*).+? ==> up to the next space char
([úa-zA-Z\-]*\[[a-zA-Z\-]*).+ ==> upto : line end
([úa-zA-Z\-]*\[[a-zA-Z\-]*).+?[a-zA-Z\-]*\[ ==> m1:orig-word-part included
([úa-zA-Z\-]*\[[a-zA-Z\-]*).+? [a-zA-Z\-]*\[ ==> multiple m1's selected
([úa-zA-Z\-]*\[[a-zA-Z\-]*).+? [a-zA-Z\-]*?\[ ==> same
 [úa-zA-Z\-]*  ==> (no "[" char) : e.g. "valor de" --> only "valor" selected
/ [úa-zA-Z\-]*? / : (no "[" char; longer) ==> same
/ [úa-zA-Z\- ]*? / : (no "[" char; longer; add " " char) ==> same
/ [úa-zA-Z\- ]*?/ : (no "[" char; longer; add " " char; " " char at the beginning) ==> 

4) remove non-m1 lines
#--> this
#ref https://stackoverflow.com/questions/4105956/regex-does-not-contain-certain-characters
^[^\[]+$	

4.1) empty lines --> remove
\r\n	@@@@
@+	\r\n

5) return chars --> to ","
(\[.*)\r\n	$1,

([úa-zA-Z\-]*\[[a-zA-Z\-]*).+?([a-zA-Z\-]*\[[a-zA-Z\-]*)


###2021年5月5日11:58:07
taskkill /f /im opera.exe

###2021年5月5日15:25:24
steps---------------------
	1) C/P
		from : orig text from orig page
		to : sakura file (m1)
	2) remove
		non-sentence-end return chars (m1')
	3) m1' ==> C/P
		1) sakura "dat" file
		2) web trans page
	comp.

	::]15:28:10

###2021年5月6日10:55:26
--------------------- steps
read : chinese texts

1) read : original
2) pinyin 
	--> see trans page
	--> add pinyin ~~> sakura text

###2021年5月9日16:13:13
###process : russian texts
text-processing ---------> russian texts

1) c/p
	from : orig page (m1)
	to :
		1) sakura
			1)「無題」 (m2a)
			2) "dat" file (m2b)
		2) trans page
			1) ru --> en (m3a)
			2) ru --> ko (m3b)
				--> then, switch the direction
2) read
	1) add translation
		from : m3b
		to : m2a
	
	2) steps (more micro-like)
		1. sakura file
				DC(double click) > C - c > Tab x N
			1. read
			2. the target word fond (m1)
			3. DC		[m1 --> select
			4. C - c	[copy
			5. Tab x N	[to --> trans page
		2. trans page
				C - f > -v > DC || C - a > -v			1. C - v		[paste the word
			2. Tab x 2		[to --> speaker
			3. Space		[start voice
//			1. C - f > -v
//			2. see --> the trans word (m1')
//			3. select
//			4. trans word --> shown?
//				1. YES : to step 3
//				2. NO :
//					1. move to trans korean page
//					2. paste
//					3. see the trans
		3. sakura
			1. add trans --> "[..."
			2. add accent --> "...'.."
			

3) "trans" strings prep
	1) regex replace @m2a
	2) copy to : m2b

###15:18:09
--------------------- steps : korean texts
[1] regex : korean texts

2021年5月18日12:42:47
#process texts : korean

start C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\70_co2\start_process-texts-for-reading_korean.bat

C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\70_co2

"C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\70_co2\start_[process-texts-for-reading_korean].bat"

#process texts : chinese
C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\70_co2\start_process-texts-for-reading_chinese.bat

"C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\70_co2\start_[process-texts-for-reading_chinese].bat"

steps
	1. web page (f0)
		1. select texts
		2. C - c [c/p --> web texts
		3. Tab x N	[from : web page
				to : "trans" file ("...[trans-sentences].dat") (f1)
	2. f1
		1. C - a > - p > -s [paste text, save
		2. Tab x N [move to --> console
	3. console
		2. run --> batch file (process texts) : 
"C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\70_co2\start_[process-texts-for-reading_chinese].bat"
	
	4. gen-ed processed texts (f2)
		1. C - a > - c [copy
		2. M - Space - c [close file
		3. Tab x N [back to : f1
	5. f1
		1. C - a > - v > -s [paste, save
		2. select head words (m1)
		3. C - c [copy
		4. Tab x N [move to --> "...[CO2].dat" (f3)
	6. f3
		1. cursor --> move to the area end
		2. C - v [paste head words
	
	4. read, add pinyins
			to : f1
		1. f1
			1. add --> space chars to both ends of the target word (m1)
			2. m1 --> select > C - c > Tab x N	[move to trans page (f0)
		2. f0
			1. C - v
			2. read out --> pinyin (m2)
			3. Tab x N [to --> f1
		3. f1
			1. add --> pinyin
		
	
	5. run --> batch (trans) : 
start C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\70_co2\start-trans-process_chinese.bat
	
	6. gen-ed trans texts --> c/p
		to : f2

2021年5月17日15:32:33

pushd C:\WORKS_2\WS\Eclipse_Luna\Cake_IFM11\app\Lib\others\jve_70-CO2_68_trans-string\
sakura php process-texts-for-reading_korean.php

echo =============================== >> log_process-texts-for-reading_korean.log && php process-texts-for-reading_korean.php >> log_process-texts-for-reading_korean.log && echo. >> log_process-texts-for-reading_korean.log


# 1) non-sentence-end return --> remove
([^\.])\r\n	$1 

# 1-2) paragraph-end return --> double
(\.)\r\n	.\r\n\r\n
#(\.)\r\n	$1\r\n\r\n

# 2) in-paragraph sentence-end --> add a new return
([^0-9]\.) 	$1\r\n\r\n
#([^0-9])\. 	$1.\r\n\r\n

[2] prosssing : read
1) copy
	from	: orig texts (m1)
	to		: "dat" file (m2a) --> first few words
			: "trans-sentences" file (m2b) --> all
2) regex (m2b')
3) c/p
	from : sakura (m2b')
	to : web trans page (m3)
4) read + add trans
5) exec --> php file
start C:\WORKS_2\WS\WS_Others.JVEMV6\JVEMV6\70_co2\start-trans-process.bat
	2) c/p
		from	: gen-ed txt file
		to		: dat file


###2021年5月16日10:49:32
--------------------- steps : web page texts --> to freemind

1) select web page texts (m1)
2) web page
	1 ~ 6. C - c > -f > -a > -v > -a > -c (copy, paste to the search box, select, copy)
	7. Tab x N (to freemind)
3) free,omd
	1. F2 > C - v (change to edit mode, paste)
###2021年5月26日15:15:59
start freemind
C:\WORKS_2\Programs\FreeMind_1.0.1\FreeMind.exe
s fm

